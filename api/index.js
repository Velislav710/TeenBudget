const express = require("express");
const mysql = require("mysql2");
const bcrypt = require("bcryptjs");
const jwt = require("jsonwebtoken");
const cors = require("cors");
const nodemailer = require("nodemailer");
const bodyParser = require("body-parser");
const crypto = require("crypto");
const db = require("./database");

const app = express();
app.use(cors());
app.use(express.json());

const SECRET_KEY = "1a2b3c4d5e6f7g8h9i0jklmnopqrstuvwxyz123456";
const EMAIL_USER = "no-reply@teenbudget.noit.eu";
const EMAIL_PASS = "Noit_2025";

const transporter = nodemailer.createTransport({
  host: "teenbudget.noit.eu",
  port: 587,
  secure: false,
  auth: {
    user: EMAIL_USER,
    pass: EMAIL_PASS
  }
});

app.post("/password-reset-request", (req, res) => {
  const { email } = req.body;

  db.findUserByEmail(email, (err, results) => {
    if (err) return res.status(400).json({ error: err.message });
    if (results.length === 0) {
      return res.status(400).json({ error: "–ù–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª —Å —Ç–æ–∑–∏ –∏–º–µ–π–ª –∞–¥—Ä–µ—Å!" });
    }

    const user = results[0];
    const token = jwt.sign({ id: user.id }, SECRET_KEY, { expiresIn: "15m" });

    const mailOptions = {
      from: EMAIL_USER,
      to: email,
      subject: "–ü—Ä–æ–º—è–Ω–∞ –Ω–∞ –ø–∞—Ä–æ–ª–∞—Ç–∞ –∑–∞ –¢–∏–π–Ω–ë—é–¥–∂–µ—Ç",
      html: `
      <div style="text-align: center; background-color: rgba(244, 211, 139, 0.5); margin: 2% 3%; padding: 3% 1%; border: 4px dotted rgb(178, 50, 0); border-radius: 20px">
        <h2>–ó–∞—è–≤–∫–∞ –∑–∞ –ø—Ä–æ–º—è–Ω–∞ –Ω–∞ –ø–∞—Ä–æ–ª–∞ –≤ <span style="color: rgb(178, 50, 0); font-weight: 600;">üïÆ</span>–¢–∏–π–Ω–ë—é–¥–∂–µ—Ç<span style="color: rgb(178, 50, 0); font-weight: 600;">üïÆ</span></h2>
        <hr style="border: 0.5px solid rgb(178, 50, 0); width: 18%; margin-top: 6%; margin-bottom: 4%"></hr>
        <p>–ù–∞—Ç–∏—Å–Ω–µ—Ç–µ  <a href="http://localhost:5174/resetbasic/${token}"
 –∑–∞ –ø—Ä–æ–º—è–Ω–∞ –Ω–∞ –ø–∞—Ä–æ–ª–∞—Ç–∞.</p>
 
      </div>
      <div>
        <p style="border-radius: 5px; background-color: rgba(178, 50, 0, 0.2); text-align: center; font-size: 13px; margin: 5% 25% 0% 25%">–ù–µ —Å—Ç–µ –ø–æ–∏—Å–∫–∞–ª–∏ –ø—Ä–æ–º—è–Ω–∞? –ò–≥–Ω–æ—Ä–∏—Ä–∞–π—Ç–µ —Ç–æ–∑–∏ –∏–º–µ–π–ª.</p>
      </div>`
    };

    transporter.sendMail(mailOptions, (error, info) => {
      if (error) return res.status(500).json({ error: "–ù–µ —É—Å–ø—è—Ö–º–µ –¥–∞ –∏–∑–ø—Ä–∞—Ç–∏–º –∏–º–µ–π–ª!" });
      res.json({ message: "–õ–∏–Ω–∫—ä—Ç –∑–∞ –ø—Ä–æ–º—è–Ω–∞ –Ω–∞ –ø–∞—Ä–æ–ª–∞—Ç–∞ –µ –∏–∑–ø—Ä–∞—Ç–µ–Ω –Ω–∞ –≤–∞—à–∏—è –∏–º–µ–π–ª!" });
    });
  });
});

app.listen(5000, () => {
  console.log("Server started on http://localhost:5000");
});




