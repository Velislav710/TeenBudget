import { TransactionAnalysisData } from './home-types';

export const fetchOpenAIResponse = async (
  transactionData: TransactionAnalysisData,
) => {
  try {
    console.log('üöÄ –ò–∑–ø—Ä–∞—â–∞–Ω–µ –Ω–∞ –¥–∞–Ω–Ω–∏ –∫—ä–º AI:', transactionData);
    console.log('API Key loaded:', !!import.meta.env.VITE_OPENAI_API_KEY);

    const response = await fetch('https://api.openai.com/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        Authorization: `Bearer ${import.meta.env.VITE_OPENAI_API_KEY}`,
      },
      body: JSON.stringify({
        model: 'gpt-4o-2024-08-06',

        messages: [
          {
            role: 'system',
            content: `–¢–∏ —Å–∏ –ø—Ä–∏—è—Ç–µ–ª—Å–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω —Ñ–∏–Ω–∞–Ω—Å–æ–≤ —Å—ä–≤–µ—Ç–Ω–∏–∫. –ì–æ–≤–æ—Ä–∏ –¥–∏—Ä–µ–∫—Ç–Ω–æ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è, –≤—Å–µ –µ–¥–Ω–æ —Å–∏ –Ω–µ–≥–æ–≤ –ø—Ä–∏—è—Ç–µ–ª. 
–ê–Ω–∞–ª–∏–∑–∏—Ä–∞–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤–∏—Ç–µ –¥–∞–Ω–Ω–∏ –∏ –¥–∞–π —Å—ä–≤–µ—Ç–∏ –ø–æ –ø—Ä–∞–∫—Ç–∏—á–µ–Ω, –∫–æ–Ω–∫—Ä–µ—Ç–µ–Ω –∏ –º–æ—Ç–∏–≤–∏—Ä–∞—â –Ω–∞—á–∏–Ω.

–§–æ–∫—É—Å–∏—Ä–∞–π —Å–µ –≤—ä—Ä—Ö—É:
1. –õ–∏—á–Ω–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–∏ –Ω–∞–≤–∏—Ü–∏
2. –£–º–Ω–æ —Ö–∞—Ä—á–µ–Ω–µ
3. –°–ø–µ—Å—Ç—è–≤–∞–Ω–µ
4. –ö–æ–Ω–∫—Ä–µ—Ç–Ω–∏ –∏–¥–µ–∏ –∑–∞ –ø–æ–¥–æ–±—Ä–µ–Ω–∏–µ

–í—Ä—ä—â–∞–π –æ—Ç–≥–æ–≤–æ—Ä–∞ –°–ê–ú–û –≤ JSON —Ñ–æ—Ä–º–∞—Ç:
{
  "analysis": {
    "summary": "–ü—Ä–∏—è—Ç–µ–ª—Å–∫–æ –∏ –º–æ—Ç–∏–≤–∏—Ä–∞—â–æ –æ–±–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ—Ç–æ —Å—ä—Å—Ç–æ—è–Ω–∏–µ",
    "recommendations": ["3 –ø—Ä–∞–∫—Ç–∏—á–Ω–∏ –∏ –∑–∞–±–∞–≤–Ω–∏ —Å—ä–≤–µ—Ç–∞"],
    "savingsPotential": "–ü—Ä–æ—Ü–µ–Ω—Ç –≤—ä–∑–º–æ–∂–Ω–∏ —Å–ø–µ—Å—Ç—è–≤–∞–Ω–∏—è",
    "monthlyTrend": "–¢–µ–Ω–¥–µ–Ω—Ü–∏—è —Å–ø—Ä—è–º–æ –º–∏–Ω–∞–ª–∏—è –º–µ—Å–µ—Ü",
    "topCategory": "–ö–∞—Ç–µ–≥–æ—Ä–∏—è —Å –Ω–∞–π-–º–Ω–æ–≥–æ —Ä–∞–∑—Ö–æ–¥–∏"
  }
}`,
          },
          {
            role: 'user',
            content: `–ê–Ω–∞–ª–∏–∑–∏—Ä–∞–π —Ç–µ–∑–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–∏ –¥–∞–Ω–Ω–∏ –∏ –¥–∞–π –ø—Ä–µ–ø–æ—Ä—ä–∫–∏:
            ${JSON.stringify(transactionData, null, 2)}`,
          },
        ],
      }),
    });

    if (!response.ok) {
      throw new Error(`OpenAI API Error: ${response.status}`);
    }

    const data = await response.json();
    console.log('‚úÖ AI –æ—Ç–≥–æ–≤–æ—Ä –ø–æ–ª—É—á–µ–Ω:', data);

    const rawContent = data?.choices[0]?.message?.content;

    if (!rawContent) {
      throw new Error(
        'Failed to extract recommendations from OpenAI response.',
      );
    }

    const cleanedContent = rawContent
      .replace(/^```json([\s\S]*?)```$/, '$1')
      .replace(/^```([\s\S]*?)```$/, '$1')
      .trim();

    return cleanedContent ? JSON.parse(cleanedContent) : null;
  } catch (error) {
    console.error('‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ AI –∑–∞—è–≤–∫–∞—Ç–∞:', error);
    return null;
  }
};
